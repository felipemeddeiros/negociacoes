{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCAEEC,G,EAAK;;AAEf,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACH;;;8BAEGI,G,EAAK;AAAA;;AAER,mBAAOC,MAAMD,GAAN,EACIE,IADJ,CACS;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADT,EAEIM,IAFJ,CAES;AAAA,qBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFT,CAAP;;AAIA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;+BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEf,mBAAOJ,MAAMD,GAAN,EAAW;AACRM,uBAAS,EAAE,gBAAgB,kBAAlB,EADD;AAERC,sBAAQ,MAFA;AAGRC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHE,aAAX,EAKAH,IALA,CAKK;AAAA,qBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALL,CAAP;;AAOM;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACH","file":"HttpService.js","sourcesContent":["export class HttpService {\n\n\t_handleErrors(res) {\n\n\t    if(!res.ok) throw new Error(res.statusText);\n\t    return res;\n\t}\n\n\tget(url) {\n\n\t\treturn fetch(url)\n            .then(res => this._handleErrors(res))\n            .then(res => res.json());\n            \n\t\t// return new Promise((resolve, reject) => {\n\n\t\t// \tlet xhr = new XMLHttpRequest();\n\n\t\t// \txhr.open('GET', url);\n\n\t\t// \txhr.onreadystatechange = () => {\n\t\t\t\t\n\t\t// \t\tif(xhr.readyState == 4) {\n\n\t\t// \t\t\tif(xhr.status == 200) {\n\n\t\t// \t\t\t\tresolve(JSON.parse(xhr.responseText));\n\t\t\t\t\t\n\t\t// \t\t\t} else {\n\n\t\t// \t\t\t\treject(xhr.responseText);\n\t\t// \t\t\t}\n\t\t// \t\t}\n\t\t// \t}\n\n\t\t// \txhr.send();\n\t\t// });\n\t}\n\n\tpost(url, dado) {\n\n\t\treturn fetch(url, {\n            headers: { 'Content-Type': 'application/json' },\n            method: 'post',\n            body: JSON.stringify(dado)\n        })\n        .then(res => this._handleErrors(res));\n\n        // return new Promise((resolve, reject) => {\n\n        //     let xhr = new XMLHttpRequest();\n        //     xhr.open(\"POST\", url, true);\n        //     xhr.setRequestHeader(\"Content-type\", \"application/json\");\n        //     xhr.onreadystatechange = () => {\n\n        //         if (xhr.readyState == 4) {\n\n        //             if (xhr.status == 200) {\n\n        //                 resolve(JSON.parse(xhr.responseText));\n            \n        //             } else {\n\n        //                 reject(xhr.responseText);\n        //             }\n        //         }\n        //     };\n\n        //     xhr.send(JSON.stringify(dado)); // usando JSON.stringify para converter objeto em uma string no formato JSON.\n        // });\n    }\n}"]}