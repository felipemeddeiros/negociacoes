{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","Negociacao","NegociacaoDao","NegociacaoService","_http","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","get","map","Date","objeto","data","quantidade","valor","console","log","error","negociacao","getConnection","conexao","dao","adiciona","connection","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {Negociacao} from '../models/Negociacao';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\n\n\nexport class NegociacaoService {\n\n\tconstructor() {\n\n\t\tthis._http = new HttpService();\n\t}\n\n\tobterNegociacoes() {\n\n        return Promise.all([\n        \n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ]).then(periodos => {\n\n            let negociacoes = periodos\n                .reduce((dados, periodo) => dados.concat(periodo), []);\n\n            return negociacoes;\n\n        }).catch(erro => {\n        \n            throw new Error(erro);\n        });\n    }\n\n\tobterNegociacoesDaSemana() {\n\n\t\treturn this._http\n\t\t\t\t.get('negociacoes/semana')\n\t\t\t\t.then(negociacoes => {\n\t\t\t\t\treturn negociacoes.map(objeto => \n\t\t\t\t\t\t\t\tnew Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana');\n\t\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaAnterior() {\n\n\t\treturn this._http\n\t\t\t\t.get('negociacoes/anterior')\n\t\t\t\t.then(negociacoes => {\n\t\t\t\t\treturn negociacoes.map(objeto => \n\t\t\t\t\t\t\t\tnew Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociacões da semana anterior');\n\t\t\t\t});\n\t}\n\n\tobterNegociacoesDaSemanaRetrasada() {\n\n\t\treturn this._http\n\t\t\t\t.get('negociacoes/retrasada')\n\t\t\t\t.then(negociacoes => {\n\t\t\t\t\treturn negociacoes.map(objeto => \n\t\t\t\t\t\t\t\tnew Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\t\t\t\t})\n\t\t\t\t.catch(error => {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t\tthrow new Error('Não foi possível obter as negociações da semana retrasada');\n\t\t\t\t});\n\t}\n\n\tcadastra(negociacao) {\n\n        return ConnectionFactory\n            .getConnection()\n            .then(conexao => new NegociacaoDao(conexao))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação cadastrada com sucesso')\n            .catch(erro => {\n            \tconsole.log(erro);\n                throw new Error(\"Não foi possível adicionar a negociação\")\n            });\n    }\n\n    lista() {\n\n\t  \treturn ConnectionFactory\n\t          .getConnection()\n\t          .then(connection => new NegociacaoDao(connection))\n\t          .then(dao => dao.listaTodos())\n\t          .catch(erro => {\n\t              console.log(erro);\n\t              throw new Error('Não foi possível obter as negociações')\n\t          });\n\t}\n\n\tesvazia() {\n\n\t    return ConnectionFactory\n\t        .getConnection()\n\t        .then(connection => new NegociacaoDao(connection))\n\t        .then(dao => dao.apagaTodos())\n\t        .then(() => 'Negociações apagadas com sucesso')\n\t        .catch(erro => {\n\t              console.log(erro);\n\t              throw new Error('Não foi possível apagar as negociações')\n\t        });\n\t}\n\n\timporta(listaAtual) {\n\n       return this.obterNegociacoes()\n           .then(negociacoes =>\n               negociacoes.filter(negociacao =>\n                   !listaAtual.some(negociacaoExistente =>\n                       negociacao.isEquals(negociacaoExistente)))\n           )\n           .catch(erro => {\n               console.log(erro);\n               throw new Error(\"Não foi possível importar as negociações\");\n           });\n   }\n}"]}